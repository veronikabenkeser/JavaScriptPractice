function permAlone(str) {
        var totalPerm=1;
        var result=[];
        
    for(var i =0; i <str.length; i++){
        var firstNum =str[i];
        var perm=firstNum;
        //create an array of other numbers
        for(var k=0; k<str.length; k++){
           if(k !==i){
               perm+=str[k];
           }
        }
        
       //permutation on that array: get the last num and change its position by         -1;
      //keep changing that num's position by -1 until its index is 1;
      //then take the last number again and do the same thing;
      //keep doing the same thing until reach the pattern we started with
      
      var permArr=perm.split("");
      var j = permArr.length-1;
      var patternsLeft = totalNumPatterns(perm.length-1);
      
      while(patternsLeft>0){
        var to =j-1;
        var subRes = permArr.move(j, to);
        result.push([subRes]);
        j-=1;
        if(j==1){
          j = perm.length-1;
        }
        patternsLeft--;
      }
      
    }
    
    return result;
}

Array.prototype.move = function(from, to) {
   this.splice(to, 0, (this.splice(from, 1))[0]);
   return this.join("");
};

   function totalNumPatterns(numOfRotatingItems){
       var iter=1;
       for(var q=numOfRotatingItems; q>1; q--){
           iter*=q;
       }
       return iter;
   }   

permAlone('1234');
